spring.application.name=pki-backend
# Postavljamo port servera na 8443, ?to je standard za HTTPS u razvoju
server.port=8443
import com.pki.pki_backend.security.JwtAuthenticationFilter;
# Tip keystore fajla
server.ssl.key-store-type=PKCS12

# reCAPTCHA konfiguracija
# Test secret key - zameniti sa production key u produkciji
recaptcha.secret-key=6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe# Pode?avanja za PostgreSQL bazu podataka
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/pki_db
spring.datasource.username=postgres
spring.datasource.password=super
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
# Isklju?ujemo prikaz SQL-a da bi logovi bili ?istiji
spring.jpa.show-sql=false

# Pode?avanja za slanje email-ova
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=slike.rimini2024@gmail.com
spring.mail.password=fgiz ualc vpjg vyij
spring.mail.properties.mail.smtp.auth=true
# JWT Configuration
app.jwt.secret=mySecretKey123456789012345678901234567890123456789012345
app.jwt.expiration=3600000

spring.mail.properties.mail.smtp.starttls.enable=true

# ===============================================
# HTTPS KONFIGURACIJA
# Omogu?avamo SSL (HTTPS)
# ===============================================
    public SecurityConfig(CustomUserDetailsService userDetailsService, JwtAuthenticationFilter jwtAuthFilter) {
# OmoguÄ‡avamo SSL (HTTPS)
        this.jwtAuthFilter = jwtAuthFilter;
server.ssl.enabled=true

# Putanja do na?eg keystore fajla.
# OBAVEZNO ZAMENITE <SERIAL_NUMBER_...> sa pravim serijskim brojem!
server.ssl.key-store=classpath:keystores/161715171732061818277987329004462955136.p12

# Lozinka za keystore fajl. Po?to smo je mi generisali, znamo da je "keystore_pass"
server.ssl.key-store-password=keystore_pass
